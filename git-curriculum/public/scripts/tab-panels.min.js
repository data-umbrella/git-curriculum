class TabPanels extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}connectedCallback(){this.render(),this._addEventListeners(),window.location.hash&&this._handleFragmentNavigation(window.location.hash)}render(){this.shadowRoot.innerHTML=`
            <style>
                /* These styles are in components/tabs.scss for now */
            </style>
            <slot></slot>
        `}_addEventListeners(){this.addEventListener("click",e=>{e.target.getAttribute("data-toggle")==="tab"&&this._handleTabClick(e)}),window.addEventListener("hashchange",e=>{this._handleFragmentNavigation(window.location.hash)})}_handleFragmentNavigation(e){const t=this.querySelector(`[aria-controls="${e.substring(1)}"]`);t&&this._handleTabClick({target:t,preventDefault:()=>{}})}_handleTabClick(e){e.preventDefault();const t=e.target,n=this.querySelector("#"+t.getAttribute("aria-controls")),s=this.querySelectorAll('[data-toggle="tab"]'),o=this.querySelectorAll('[role="tabpanel"]');s.forEach(e=>{e.setAttribute("aria-selected","false"),e.classList.remove("is-active")}),o.forEach(e=>{e.classList.remove("is-active")}),t.setAttribute("aria-selected","true"),t.classList.add("is-active"),n&&n.classList.add("is-active")}}window.customElements.define("tab-panels",TabPanels)